/*Variables y operaciones
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es una variable y para qu√© sirve?

Una variable es un espacio reservado en memoria donde se almacena informacion.

¬øCu√°l es la diferencia entre declarar e inicializar una variable?

Una variable se declara para reservar el espacio en memoria, se inicializa para guardar info en ese espacio.

¬øCu√°l es la diferencia entre sumar n√∫meros y concatenar strings?

Sumar numeros es una operacion matematica y concatenar es cuando se juntan 2 textos para formar uno solo.

¬øCu√°l operador me permite sumar o concatenar?

el signo de +


2Ô∏è‚É£ Determina el nombre y tipo de dato para almacenar en variables la siguiente informaci√≥n:
3Ô∏è‚É£ Traduce a c√≥digo JavaScript las variables del ejemplo anterior y deja tu c√≥digo en los comentarios.

let nombre = 'Juanito';
let apellido = 'Alcachofa';
let nombreUsuario = 'JAlcachofa';
let edad = 21;
let email = 'jalcachofa@mail.com';
let mayorEdad = true;
let dineroAhorrado = 10000;
let deudas = null;

4Ô∏è‚É£ Calcula e imprime las siguientes variables a partir de las variables del ejemplo anterior:

Nombre completo (nombre y apellido)
Dinero real (dinero ahorrado menos deudas)

const nombreCompleto = `${nombre} ${Apellido}`
const dineroReal = dineroAhorrado - deudas
console.log(nombreCompleto)
console.log(dineroReal)

FUNCIONES
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es una funci√≥n?

Es un bloque de codigo que hace una serie de procedimientos

¬øCu√°ndo me sirve usar una funci√≥n en mi c√≥digo?

Cuando se repite varias lineas de codigo en el proyecto

¬øCu√°l es la diferencia entre par√°metros y argumentos de una funci√≥n?

Parametro es una variable que esta en la definicion de una funcion.
Argumento son los datos que se le pasan a los parametros de una funcion.

2Ô∏è‚É£ Convierte el siguiente c√≥digo en una funci√≥n, pero, cambiando cuando sea necesario las variables constantes por par√°metros y argumentos en una funci√≥n:

const name = "Juan David";
const lastname = "Castro Gallego";
const completeName = name + lastname;
const nickname = "juandc";

const funcion = (name,lastname,nickname) => {
  const response = completeName = `mi nombre es ${name} ${lastname}, y mi nickname es ${nickname}`;
  console.log(response);

}
funcion("Juan David","Castro Gallego","juandc")

Condicionales
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es una condicional?

Es un grupo de instrucciones que se ejecuta segun el resultado de una evaluacion


¬øQu√© tipos de condicionales existen en JavaScript y cu√°les son sus diferencias?

if , else if, switch

¬øPuedo combinar funciones y condicionales?

Si se puede

2Ô∏è‚É£ Replica el comportamiento del siguiente c√≥digo que usa la sentencia switch utilizando if, else y else if:

const tipoDeSuscripcion = "Basic";

switch (tipoDeSuscripcion) {
   case "Free":
       console.log("Solo puedes tomar los cursos gratis");
       break;
   case "Basic":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
       break;
   case "Expert":
       console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
       break;
   case "ExpertPlus":
       console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
       break;
}
3Ô∏è‚É£ Replica el comportamiento de tu condicional anterior con if, else y else if, pero ahora solo con if (sin else ni else if).

const tipoDeSuscripcion = "basic";
if(tipoDeSuscripcion === 'Free'){
	console.log("Solo puedes tomar los cursos gratis");
} else if (tipoDeSuscripcion === 'Basic') {
	console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
} else if (tipoDeSuscripcion === 'Expert') {
	console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
} else if (tipoDeSuscripcion === 'Expert+') {
	console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
}

// Codigo solo con if
const tipoDeSuscripcion = 'basic';
if (tipoDeSuscripcion === 'Free') {
  console.log('Solo puedes tomar los cursos gratis');
} else {
  if (tipoDeSuscripcion === 'Basic') {
    console.log('Puedes tomar casi todos los cursos de Platzi durante un mes');
  } else {
    if (tipoDeSuscripcion === 'Expert') {
      console.log(
        'Puedes tomar casi todos los cursos de Platzi durante un a√±o'
      );
    } else {
      if (tipoDeSuscripcion === 'Expert+') {
        console.log(
          'T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o'
        );
      }
    }
  }
}

Bonus: si ya eres una experta o experto en el lenguaje, te desaf√≠o a comentar c√≥mo replicar este comportamiento con arrays y un solo condicional. üòè

Ciclos
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es un ciclo? Un bloque de codigo que se repite n veces
¬øQu√© tipos de ciclos existen en JavaScript? for for in for of while do while
¬øQu√© es un ciclo infinito y por qu√© es un problema? Es un ciclo que nunca se va a detener, puede causar que nuestro ordenador se apague por exceso consumo de memoria en el navegador
¬øPuedo mezclar ciclos y condicionales? si se puede


2Ô∏è‚É£ Replica el comportamiento de los siguientes ciclos for utilizando ciclos while:

for (let i = 0; i < 5; i++) {
    console.log("El valor de i es: " + i);
}
for (let i = 10; i >= 2; i--) {
    console.log("El valor de i es: " + i);
}

let i = 0;
while (i < 5) {
	console.log("El valor de i es: " + i);
	i++;
}

i = 10;
while (i >= 2) {
	console.log("El valor de i es: " + i);
	i--;
}


3Ô∏è‚É£ Escribe un c√≥digo en JavaScript que le pregunte a los usuarios cu√°nto es 2 + 2. Si responden bien, mostramos un mensaje de felicitaciones, pero si responden mal, volvemos a empezar.

Pista: puedes usar la funci√≥n prompt de JavaScript.

function juego() {
  let resultado;
  do {
    resultado = parseInt(prompt('¬øCu√°l es el resultado de "2 + 2". R: '));
  } while (resultado !== 4);

  return console.log('¬°Eres un GENIO!');
}
juego();


Listas
1Ô∏è‚É£ Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es un array? Un Un array es un tipo de datos objetos, puedes guardar distintos valores como si fuera una lista y se encuentran seguidos en memoria.
    let lista = ['hola', 'como', 'estas']
¬øQu√© es un objeto?
Un objeto te permite guardar datos con claves y valores ejemplo:
  const objetoCarro = {
    marca: 'Bugatti',
    modelo: 'Chiron',
    precio: '1 USD'
  }
¬øCu√°ndo es mejor usar objetos o arrays?
Depende mucho, pero algo que ahorita se me viene a la cabeza, es mejor utilizar un objeto cuando tienes que
 guardar datos que son repetitivos como un usuario que siempre va a tener las mismas claves y solo cambian los valores.
¬øPuedo mezclar arrays con objetos o incluso objetos con arrays? si

2Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima su primer elemento.
const array = [1,2,3,4,5]
const funcion = (array = []) => {
console.log(array[0]);
}

3Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el array completo).
const array = [1, 2, 3, 4, 5];

const funcion = (array = []) => {
  array.map((value) => console.log(value));
};

funcion(array);


4Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier objeto como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el objeto completo).


const objeto = { a: 'ok', b: 'no' };

const funcion = (objeto = {}) => {
  Object.values(objeto).map((elemento) => console.log(elemento));
};

funcion(objeto);


¬øC√≥mo te fue? üèÜ
¬°Felicidades por completar la prueba de JavaScript! Conf√≠o en que hayas completado cada paso y hayas pausado para repasar los temas de los ejercicios que se te complicaron.

Ahora s√≠, contin√∫a a la siguiente clase, pero recuerda que ya no puedes abandonar el curso, debes completarlo hasta el final. No importa cu√°nto tiempo te tome. Yo s√© que t√∫ puedes y t√∫ deber√≠as de saberlo tambi√©n. Mira todo lo que lograste con esta prueba. üèÜ

¬°Te espero en la siguiente clase para comenzar!*/
